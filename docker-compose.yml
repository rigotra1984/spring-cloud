version: "3.9"
services:
  config-service:
    image: rigoberto/config-service:1.0-SNAPSHOT
    build: ./config
    container_name: config-service
    ports:
      - "8088:8088"
    healthcheck:
      test: curl -m 5 --silent --fail --request GET http://localhost:8088/health/default | jq --exit-status -n 'inputs | if has("name") then .name=="health" else false end' > /dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
  eureka-service:
    image: rigoberto/eureka-service:1.0-SNAPSHOT
    build: ./eureka
    container_name: eureka-service
    ports:
      - "8061:8061"
    depends_on:
      config-service:
        condition: service_healthy
    healthcheck:
      test: curl -m 5 --silent --fail --request GET http://localhost:8061/health/default | jq --exit-status -n 'inputs | if has("name") then .name=="health" else false end' > /dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
    environment:
      SPRING_PROFILES_ACTIVE: docker
#  postgres-transport:
#    image: 'postgres:13.1-alpine'
#    container_name: postgres-transport
#    environment:
#      - 'POSTGRES_DB=transport-cloud'
#      - 'POSTGRES_PASSWORD=postgres'
#      - 'POSTGRES_USER=postgres'
#    ports:
#      - '5432'
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 10
#    restart: always
#  postgres-passenger:
#    image: 'postgres:13.1-alpine'
#    container_name: postgres-passenger
#    environment:
#      - 'POSTGRES_DB=passenger-cloud'
#      - 'POSTGRES_PASSWORD=postgres'
#      - 'POSTGRES_USER=postgres'
#    ports:
#      - '5432'
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 10
#    restart: always
#  transport-service:
#    image: rigoberto/transport-service:1.0-SNAPSHOT
#    build: ./transport-service
#    container_name: transport-service
#    ports:
#      - "8080"
#    depends_on:
#      eureka-service:
#        condition: service_healthy
#      postgres-transport:
#        condition: service_healthy
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#  passenger-service:
#    image: rigoberto/passenger-service:1.0-SNAPSHOT
#    build: ./passenger-service
#    container_name: passenger-service
#    ports:
#      - "8080"
#    depends_on:
#      eureka-service:
#        condition: service_healthy
#      postgres-passenger:
#        condition: service_healthy
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
  gateway-service:
    image: rigoberto/gateway-service:1.0-SNAPSHOT
    build: ./gateway
    container_name: gateway-service
    ports:
      - "8060:8060"
#    depends_on:
#      eureka-service:
#        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: local